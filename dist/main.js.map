{"version":3,"file":"main.js","sources":["../src/main.ts"],"sourcesContent":["const msecPerSecond = 1000;\nconst msecPerMinute = 1000 * 60;\nconst msecPerHour = 1000 * 60 * 60;\nconst msecPerDay = 1000 * 60 * 60 * 24;\n\n\nexport class TimeSpan {\n    _milliseconds: number = 0;\n\n    constructor(milliseconds: number) {\n        this._milliseconds = milliseconds\n    }\n\n    static fromSeconds(seconds: number) {\n        return new TimeSpan(seconds * msecPerSecond);\n    }\n    static fromMinutes(minutes: number) {\n        return new TimeSpan(minutes * msecPerMinute);\n    }\n    static fromHours(hours: number) {\n        return new TimeSpan(hours * msecPerHour);\n    }\n    static fromDays(days: number) {\n        return new TimeSpan(days * msecPerDay);\n    }\n\n    add(timespan: TimeSpan) {\n        return new TimeSpan(this.milliseconds + timespan.milliseconds)\n    }\n    subtract(timespan: TimeSpan) {\n        return new TimeSpan(this.milliseconds - timespan.milliseconds)\n    }\n    duration() {\n        return new TimeSpan(Math.abs(this.milliseconds))\n    }\n\n    addMilliseconds(milliseconds: number) {\n        this._milliseconds += milliseconds\n    }\n    subtractMilliseconds(milliseconds: number) {\n        this._milliseconds -= milliseconds\n    }\n\n    addSeconds(seconds: number) {\n        this._milliseconds += (seconds * msecPerSecond)\n    }\n    subtractSeconds(seconds: number) {\n        this._milliseconds -= (seconds * msecPerSecond)\n    }\n\n    addMinutes(minutes: number) {\n        this._milliseconds += (minutes * msecPerMinute)\n    }\n    subtractMinutes(minutes: number) {\n        this._milliseconds -= (minutes * msecPerMinute)\n    }\n\n    addHours(hours: number) {\n        this._milliseconds += (hours * msecPerHour)\n    }\n    subtractHours(hours: number) {\n        this._milliseconds -= (hours * msecPerHour)\n    }\n\n    addDays(days: number) {\n        this._milliseconds += (days * msecPerDay)\n    }\n    subtractDays(days: number) {\n        this._milliseconds -= (days * msecPerDay)\n    }\n\n\n    get milliseconds() {\n        return this._milliseconds;\n    }\n    get seconds() {\n        return this._milliseconds / msecPerSecond;\n    }\n    get minutes() {\n        return this._milliseconds / msecPerMinute;\n    }\n    get hours() {\n        return this._milliseconds / msecPerHour;\n    }\n    get days() {\n        return this._milliseconds / msecPerDay;\n    }\n\n    get totalMilliseconds() {\n        return Math.floor(this._milliseconds);\n    }\n    get totalSeconds() {\n        return Math.floor(this._milliseconds / msecPerSecond);\n    }\n    get totalMinutes() {\n        return Math.floor(this._milliseconds / msecPerMinute);\n    }\n    get totalHours() {\n        return Math.floor(this._milliseconds / msecPerHour);\n    }\n    get totalDays() {\n        return Math.floor(this._milliseconds / msecPerDay);\n    }\n\n    equals(compare: TimeSpan) {\n        return compare.milliseconds === this._milliseconds;\n    }\n    lesser(compare: TimeSpan) {\n        return this._milliseconds < compare.milliseconds;\n    }\n    lesserEqual(compare: TimeSpan) {\n        return this._milliseconds <= compare.milliseconds;\n    }\n    greater(compare: TimeSpan) {\n        return this._milliseconds > compare.milliseconds;\n    }\n    greaterEqual(compare: TimeSpan) {\n        return this._milliseconds >= compare.milliseconds;\n    }\n\n}\n\nTimeSpan.prototype.toString = function () {\n    const formatter = new Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 })\n    const days = Math.floor(this.milliseconds / msecPerDay)\n    let remaining = this.milliseconds % msecPerDay\n    const hours = Math.floor(remaining / msecPerHour)\n    remaining = remaining % msecPerHour\n    const minutes = Math.floor(remaining / msecPerMinute)\n    remaining = remaining % msecPerMinute\n    const seconds = Math.floor(remaining / msecPerSecond)\n    remaining = remaining % msecPerSecond\n    const milliseconds = remaining\n    const msFormatter = new Intl.NumberFormat(undefined, { minimumIntegerDigits: 3 })\n    return `${days}.${formatter.format(hours)}:${formatter.format(minutes)}:${formatter.format(seconds)}.${msFormatter.format(milliseconds)}`;\n}\n"],"names":["TimeSpan","milliseconds","_milliseconds","this","fromSeconds","seconds","fromMinutes","minutes","fromHours","hours","fromDays","days","add","timespan","subtract","duration","Math","abs","addMilliseconds","subtractMilliseconds","addSeconds","subtractSeconds","addMinutes","subtractMinutes","addHours","subtractHours","addDays","subtractDays","equals","compare","lesser","lesserEqual","greater","greaterEqual","floor","prototype","toString","formatter","Intl","NumberFormat","undefined","minimumIntegerDigits","remaining","msFormatter","format"],"mappings":"AAAA,IAMaA,aAGT,WAAYC,QAFZC,cAAwB,EAGpBC,KAAKD,cAAgBD,EAJ7BD,EAOWI,YAAP,SAAmBC,GACf,WAAWL,EAdG,IAcMK,MAEjBC,YAAP,SAAmBC,GACf,WAAWP,EAhBG,IAgBMO,MAEjBC,UAAP,SAAiBC,GACb,WAAWT,EAlBC,KAkBQS,MAEjBC,SAAP,SAAgBC,GACZ,WAAWX,EApBA,MAoBSW,iCAGxBC,IAAA,SAAIC,GACA,WAAWb,EAASG,KAAKF,aAAeY,EAASZ,iBAErDa,SAAA,SAASD,GACL,WAAWb,EAASG,KAAKF,aAAeY,EAASZ,iBAErDc,SAAA,WACI,WAAWf,EAASgB,KAAKC,IAAId,KAAKF,kBAGtCiB,gBAAA,SAAgBjB,GACZE,KAAKD,eAAiBD,KAE1BkB,qBAAA,SAAqBlB,GACjBE,KAAKD,eAAiBD,KAG1BmB,WAAA,SAAWf,GACPF,KAAKD,eA5CS,IA4CSG,KAE3BgB,gBAAA,SAAgBhB,GACZF,KAAKD,eA/CS,IA+CSG,KAG3BiB,WAAA,SAAWf,GACPJ,KAAKD,eAlDS,IAkDSK,KAE3BgB,gBAAA,SAAgBhB,GACZJ,KAAKD,eArDS,IAqDSK,KAG3BiB,SAAA,SAASf,GACLN,KAAKD,eAxDO,KAwDWO,KAE3BgB,cAAA,SAAchB,GACVN,KAAKD,eA3DO,KA2DWO,KAG3BiB,QAAA,SAAQf,GACJR,KAAKD,eA9DM,MA8DYS,KAE3BgB,aAAA,SAAahB,GACTR,KAAKD,eAjEM,MAiEYS,KAoC3BiB,OAAA,SAAOC,GACH,OAAOA,EAAQ5B,eAAiBE,KAAKD,iBAEzC4B,OAAA,SAAOD,GACH,YAAY3B,cAAgB2B,EAAQ5B,gBAExC8B,YAAA,SAAYF,GACR,YAAY3B,eAAiB2B,EAAQ5B,gBAEzC+B,QAAA,SAAQH,GACJ,YAAY3B,cAAgB2B,EAAQ5B,gBAExCgC,aAAA,SAAaJ,GACT,YAAY3B,eAAiB2B,EAAQ5B,0CA7CzC,WACI,YAAYC,mCAEhB,WACI,YAAYA,cA5EE,yBA8ElB,WACI,YAAYA,cA9EE,uBAgFlB,WACI,YAAYA,cAhFA,uBAkFhB,WACI,YAAYA,cAlFD,qCAqFf,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,yCAE3B,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cA5FT,+BA8FlB,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cA9FT,6BAgGlB,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cAhGX,6BAkGhB,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cAlGZ,qMAuHnBF,EAASmC,UAAUC,SAAW,WAC1B,IAAMC,EAAY,IAAIC,KAAKC,kBAAaC,EAAW,CAAEC,qBAAsB,IACrE9B,EAAOK,KAAKkB,MAAM/B,KAAKF,aAzHd,OA0HXyC,EAAYvC,KAAKF,aA1HN,MA2HTQ,EAAQO,KAAKkB,MAAMQ,EA5HT,MA6HhBA,GA7HgB,KA8HhB,IAAMnC,EAAUS,KAAKkB,MAAMQ,EA/HT,KAgIlBA,GAhIkB,IAiIlB,IAAMrC,EAAUW,KAAKkB,MAAMQ,EAlIT,KAoIZzC,EADNyC,GAnIkB,IAqIZC,EAAc,IAAIL,KAAKC,kBAAaC,EAAW,CAAEC,qBAAsB,IAC7E,OAAU9B,MAAQ0B,EAAUO,OAAOnC,OAAU4B,EAAUO,OAAOrC,OAAY8B,EAAUO,OAAOvC,OAAYsC,EAAYC,OAAO3C"}