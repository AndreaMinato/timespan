{"version":3,"file":"timespan.cjs","sources":["../src/index.ts"],"sourcesContent":["const msecPerSecond = 1000;\r\nconst msecPerMinute = 1000 * 60;\r\nconst msecPerHour = 1000 * 60 * 60;\r\nconst msecPerDay = 1000 * 60 * 60 * 24;\r\n\r\n\r\nexport class TimeSpan {\r\n    _milliseconds: number = 0;\r\n\r\n    constructor(milliseconds: number) {\r\n        this._milliseconds = milliseconds\r\n    }\r\n\r\n    static fromSeconds(seconds: number) {\r\n        return new TimeSpan(seconds * msecPerSecond);\r\n    }\r\n    static fromMinutes(minutes: number) {\r\n        return new TimeSpan(minutes * msecPerMinute);\r\n    }\r\n    static fromHours(hours: number) {\r\n        return new TimeSpan(hours * msecPerHour);\r\n    }\r\n    static fromDays(days: number) {\r\n        return new TimeSpan(days * msecPerDay);\r\n    }\r\n\r\n    add(timespan: TimeSpan) {\r\n        return new TimeSpan(this.milliseconds + timespan.milliseconds)\r\n    }\r\n    subtract(timespan: TimeSpan) {\r\n        return new TimeSpan(this.milliseconds - timespan.milliseconds)\r\n    }\r\n    duration() {\r\n        return new TimeSpan(Math.abs(this.milliseconds))\r\n    }\r\n\r\n    addMilliseconds(milliseconds: number) {\r\n        this._milliseconds += milliseconds\r\n    }\r\n    subtractMilliseconds(milliseconds: number) {\r\n        this._milliseconds -= milliseconds\r\n    }\r\n\r\n    addSeconds(seconds: number) {\r\n        this._milliseconds += (seconds * msecPerSecond)\r\n    }\r\n    subtractSeconds(seconds: number) {\r\n        this._milliseconds -= (seconds * msecPerSecond)\r\n    }\r\n\r\n    addMinutes(minutes: number) {\r\n        this._milliseconds += (minutes * msecPerMinute)\r\n    }\r\n    subtractMinutes(minutes: number) {\r\n        this._milliseconds -= (minutes * msecPerMinute)\r\n    }\r\n\r\n    addHours(hours: number) {\r\n        this._milliseconds += (hours * msecPerHour)\r\n    }\r\n    subtractHours(hours: number) {\r\n        this._milliseconds -= (hours * msecPerHour)\r\n    }\r\n\r\n    addDays(days: number) {\r\n        this._milliseconds += (days * msecPerDay)\r\n    }\r\n    subtractDays(days: number) {\r\n        this._milliseconds -= (days * msecPerDay)\r\n    }\r\n\r\n\r\n    get milliseconds() {\r\n        return this._milliseconds;\r\n    }\r\n    get seconds() {\r\n        return this._milliseconds / msecPerSecond;\r\n    }\r\n    get minutes() {\r\n        return this._milliseconds / msecPerMinute;\r\n    }\r\n    get hours() {\r\n        return this._milliseconds / msecPerHour;\r\n    }\r\n    get days() {\r\n        return this._milliseconds / msecPerDay;\r\n    }\r\n\r\n    get totalMilliseconds() {\r\n        return Math.floor(this._milliseconds);\r\n    }\r\n    get totalSeconds() {\r\n        return Math.floor(this._milliseconds / msecPerSecond);\r\n    }\r\n    get totalMinutes() {\r\n        return Math.floor(this._milliseconds / msecPerMinute);\r\n    }\r\n    get totalHours() {\r\n        return Math.floor(this._milliseconds / msecPerHour);\r\n    }\r\n    get totalDays() {\r\n        return Math.floor(this._milliseconds / msecPerDay);\r\n    }\r\n\r\n    equals(compare: TimeSpan) {\r\n        return compare.milliseconds === this._milliseconds;\r\n    }\r\n    lesser(compare: TimeSpan) {\r\n        return this._milliseconds < compare.milliseconds;\r\n    }\r\n    lesserEqual(compare: TimeSpan) {\r\n        return this._milliseconds <= compare.milliseconds;\r\n    }\r\n    greater(compare: TimeSpan) {\r\n        return this._milliseconds > compare.milliseconds;\r\n    }\r\n    greaterEqual(compare: TimeSpan) {\r\n        return this._milliseconds >= compare.milliseconds;\r\n    }\r\n\r\n}\r\n\r\nTimeSpan.prototype.toString = function () {\r\n    const formatter = new Intl.NumberFormat(undefined, { minimumIntegerDigits: 2 })\r\n    const days = Math.floor(this.milliseconds / msecPerDay)\r\n    let remaining = this.milliseconds % msecPerDay\r\n    const hours = Math.floor(remaining / msecPerHour)\r\n    remaining = remaining % msecPerHour\r\n    const minutes = Math.floor(remaining / msecPerMinute)\r\n    remaining = remaining % msecPerMinute\r\n    const seconds = Math.floor(remaining / msecPerSecond)\r\n    remaining = remaining % msecPerSecond\r\n    const milliseconds = remaining\r\n    return `${days}.${formatter.format(hours)}:${formatter.format(minutes)}:${formatter.format(seconds)}.${milliseconds}`;\r\n}\r\n"],"names":["TimeSpan","milliseconds","_milliseconds","this","fromSeconds","seconds","fromMinutes","minutes","fromHours","hours","fromDays","days","add","timespan","subtract","duration","Math","abs","addMilliseconds","subtractMilliseconds","addSeconds","subtractSeconds","addMinutes","subtractMinutes","addHours","subtractHours","addDays","subtractDays","equals","compare","lesser","lesserEqual","greater","greaterEqual","floor","prototype","toString","formatter","Intl","NumberFormat","undefined","minimumIntegerDigits","remaining","format"],"mappings":"AAAA,IAMaA,aAGT,WAAYC,QAFZC,cAAwB,EAGpBC,KAAKD,cAAgBD,EAJ7BD,EAOWI,YAAP,SAAmBC,GACf,WAAWL,EAdG,IAcMK,MAEjBC,YAAP,SAAmBC,GACf,WAAWP,EAhBG,IAgBMO,MAEjBC,UAAP,SAAiBC,GACb,WAAWT,EAlBC,KAkBQS,MAEjBC,SAAP,SAAgBC,GACZ,WAAWX,EApBA,MAoBSW,iCAGxBC,IAAA,SAAIC,GACA,WAAWb,EAASG,KAAKF,aAAeY,EAASZ,iBAErDa,SAAA,SAASD,GACL,WAAWb,EAASG,KAAKF,aAAeY,EAASZ,iBAErDc,SAAA,WACI,WAAWf,EAASgB,KAAKC,IAAId,KAAKF,kBAGtCiB,gBAAA,SAAgBjB,GACZE,KAAKD,eAAiBD,KAE1BkB,qBAAA,SAAqBlB,GACjBE,KAAKD,eAAiBD,KAG1BmB,WAAA,SAAWf,GACPF,KAAKD,eA5CS,IA4CSG,KAE3BgB,gBAAA,SAAgBhB,GACZF,KAAKD,eA/CS,IA+CSG,KAG3BiB,WAAA,SAAWf,GACPJ,KAAKD,eAlDS,IAkDSK,KAE3BgB,gBAAA,SAAgBhB,GACZJ,KAAKD,eArDS,IAqDSK,KAG3BiB,SAAA,SAASf,GACLN,KAAKD,eAxDO,KAwDWO,KAE3BgB,cAAA,SAAchB,GACVN,KAAKD,eA3DO,KA2DWO,KAG3BiB,QAAA,SAAQf,GACJR,KAAKD,eA9DM,MA8DYS,KAE3BgB,aAAA,SAAahB,GACTR,KAAKD,eAjEM,MAiEYS,KAoC3BiB,OAAA,SAAOC,GACH,OAAOA,EAAQ5B,eAAiBE,KAAKD,iBAEzC4B,OAAA,SAAOD,GACH,YAAY3B,cAAgB2B,EAAQ5B,gBAExC8B,YAAA,SAAYF,GACR,YAAY3B,eAAiB2B,EAAQ5B,gBAEzC+B,QAAA,SAAQH,GACJ,YAAY3B,cAAgB2B,EAAQ5B,gBAExCgC,aAAA,SAAaJ,GACT,YAAY3B,eAAiB2B,EAAQ5B,0CA7CzC,WACI,YAAYC,mCAEhB,WACI,YAAYA,cA5EE,yBA8ElB,WACI,YAAYA,cA9EE,uBAgFlB,WACI,YAAYA,cAhFA,uBAkFhB,WACI,YAAYA,cAlFD,qCAqFf,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,yCAE3B,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cA5FT,+BA8FlB,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cA9FT,6BAgGlB,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cAhGX,6BAkGhB,WACI,OAAOc,KAAKkB,MAAM/B,KAAKD,cAlGZ,qMAuHnBF,EAASmC,UAAUC,SAAW,WAC1B,IAAMC,EAAY,IAAIC,KAAKC,kBAAaC,EAAW,CAAEC,qBAAsB,IACrE9B,EAAOK,KAAKkB,MAAM/B,KAAKF,aAzHd,OA0HXyC,EAAYvC,KAAKF,aA1HN,MA2HTQ,EAAQO,KAAKkB,MAAMQ,EA5HT,MA6HhBA,GA7HgB,KA8HhB,IAAMnC,EAAUS,KAAKkB,MAAMQ,EA/HT,KAgIlBA,GAhIkB,IAiIlB,IAAMrC,EAAUW,KAAKkB,MAAMQ,EAlIT,KAoIZzC,EADNyC,GAnIkB,IAqIlB,OAAU/B,MAAQ0B,EAAUM,OAAOlC,OAAU4B,EAAUM,OAAOpC,OAAY8B,EAAUM,OAAOtC,OAAYJ"}